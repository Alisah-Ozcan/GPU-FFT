cmake_minimum_required(VERSION 3.2)
project(GPUFFT VERSION 1.0 LANGUAGES C CXX CUDA ASM)

set(BINARY_LOCATION ${CMAKE_CURRENT_BINARY_DIR}/bin)

set(CMAKE_CUDA_STANDARD 17)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

find_package(CUDAToolkit REQUIRED)

if(NOT DEFINED CMAKE_CUDA_ARCHITECTURES)
    set(CMAKE_CUDA_ARCHITECTURES 75)
endif()
message(STATUS "Setting CMAKE_CUDA_ARCHITECTURES to ${CMAKE_CUDA_ARCHITECTURES} for GPUFFT")

##################
# Export Library #
##################

set(RUNTIME_DESTINATION ${CMAKE_INSTALL_PREFIX}/bin)
set(LIBRARY_DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
set(ARCHIVE_DESTINATION ${CMAKE_INSTALL_PREFIX}/lib)
set(INCLUDES_DESTINATION ${CMAKE_INSTALL_PREFIX}/include)
set(INCLUDES_INSTALL_DIR ${INCLUDES_DESTINATION}/GPUFFT-${PROJECT_VERSION})

set(GPUFFT_GENERATED_DIR "${CMAKE_CURRENT_BINARY_DIR}/generated")
set(GPUFFT_VERSION_CONFIG "${GPUFFT_GENERATED_DIR}/${PROJECT_NAME}ConfigVersion.cmake")
set(GPUFFT_PROJECT_CONFIG "${GPUFFT_GENERATED_DIR}/${PROJECT_NAME}Config.cmake")
set(GPUFFT_TARGETS_EXPORT_NAME "${PROJECT_NAME}Targets")
set(GPUFFT_CONFIG_INSTALL_DIR "lib/cmake/${PROJECT_NAME}-${PROJECT_VERSION}")
set(GPUFFT_NAMESPACE "${PROJECT_NAME}::")
set(GPUFFT_VERSION 1.0)

include(CMakePackageConfigHelpers)
write_basic_package_version_file(
    "${GPUFFT_VERSION_CONFIG}" VERSION ${GPUFFT_VERSION} COMPATIBILITY SameMajorVersion
)
configure_file("${GPUFFT_SOURCE_DIR}/cmake/Config.cmake.in" "${GPUFFT_PROJECT_CONFIG}" @ONLY)

install(
    FILES "${GPUFFT_PROJECT_CONFIG}" "${GPUFFT_VERSION_CONFIG}"
    DESTINATION "${GPUFFT_CONFIG_INSTALL_DIR}")

install(
    EXPORT "${GPUFFT_TARGETS_EXPORT_NAME}"
    NAMESPACE "${GPUFFT_NAMESPACE}"
    DESTINATION "${GPUFFT_CONFIG_INSTALL_DIR}")

add_subdirectory(src)

############
# Examples #
############

option(GPUFFT_BUILD_EXAMPLES "Build GPU-FTT Examples" OFF)
message(STATUS "GPUFFT_BUILD_EXAMPLES: ${GPUFFT_BUILD_EXAMPLES}")
if(GPUFFT_BUILD_EXAMPLES)
    add_subdirectory(example)
endif()

##############
# BENCHMARKS #
##############

option(GPUFFT_BUILD_BENCHMARKS "Build GPU-FTT Benchmarks" OFF)
message(STATUS "GPUFFT_BUILD_BENCHMARKS: ${GPUFFT_BUILD_BENCHMARKS}")
if(GPUFFT_BUILD_BENCHMARKS)
    add_subdirectory(benchmark)
endif()

